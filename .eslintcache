[{"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\index.js":"1","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\column.js":"2","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Column.js":"3","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\NewSectionBTN.js":"4","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\TaskComponent.js":"5","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Task.js":"6","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\dataService.js":"7","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Kanban.js":"8","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Sidebar.js":"9"},{"size":928,"mtime":1610170410670,"results":"10","hashOfConfig":"11"},{"size":1697,"mtime":1609214591954,"results":"12","hashOfConfig":"11"},{"size":6444,"mtime":1609590715351,"results":"13","hashOfConfig":"11"},{"size":2594,"mtime":1609315099696,"results":"14","hashOfConfig":"11"},{"size":2704,"mtime":1609841531450,"results":"15","hashOfConfig":"11"},{"size":345,"mtime":1609310711329,"results":"16","hashOfConfig":"11"},{"size":4282,"mtime":1610356394334,"results":"17","hashOfConfig":"11"},{"size":8135,"mtime":1610356480832,"results":"18","hashOfConfig":"11"},{"size":4113,"mtime":1610356317408,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"u73cbq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\index.js",[],["42","43"],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\column.js",[],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Column.js",[],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\NewSectionBTN.js",[],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\TaskComponent.js",[],["44","45"],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Task.js",[],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\dataService.js",["46","47","48","49"],"import { v4 as uuid } from 'uuid';  //used to create keys \r\n\r\n const backend_tasks = [\r\n\r\n    {id : \"itemUnique1\", title: \"Workshop 1\", content : 'First Task', date : Date.now()}, \r\n  \r\n    {id : \"itemUnique2\", title: \"Workshop 2\", content : 'Second Task', date : Date.now()},  \r\n  \r\n    {id : \"itemUnique3\", title: \"Workshop 3\", content : 'Third Task', date : Date.now()},\r\n\r\n    {id : \"itemUnique4\", title: \"Workshop 4\", content : 'Fourth Task', date : Date.now()},\r\n\r\n    {id : \"itemUnique5\", title: \"Workshop 5\", content : 'Fifth Task', date : Date.now()},\r\n\r\n    {id : \"itemUnique6\", title: \"Workshop 6\", content : 'Eighth Task', date : Date.now()},\r\n  \r\n  \r\n  ]\r\n  \r\n  \r\n  const backend_columns =    //mockup data/ placeholder for actual api \r\n  \r\n   [\r\n      {\r\n        id : \"col1\",\r\n        columnName : \"Todo\",\r\n        emoji : \"ðŸ’¡\",\r\n        tasks : [\"itemUnique1\", \"itemUnique3\", \"itemUnique2\"]\r\n      },\r\n  \r\n  \r\n      {\r\n        id : \"col2\",\r\n        columnName : \"In-Progress\",\r\n        emoji : \"ðŸ’¡\",\r\n        tasks : []\r\n      },\r\n  \r\n      {\r\n        id : \"col3\",\r\n        columnName : \"Finished\",\r\n        emoji : \"ðŸ’¡\",\r\n        tasks : []\r\n      }\r\n   ]\r\n\r\n\r\n\r\nconst backend_projects = [\r\n  \r\n  {\r\n      id : \"uniqueProject1\",\r\n      name : \"BTS630\",\r\n      group : \"uniqueGroup1\",\r\n      columns : [\"col1\", \"col2\", \"col3\"]\r\n  },\r\n\r\n  {\r\n      id : \"uniqueProject2\",\r\n      name : \"BTP600\",\r\n      group : \"uniqueGroup1\",\r\n      columns : []\r\n  },\r\n\r\n  {\r\n    id : \"uniqueProject3\",\r\n    name : \"BTN530\",\r\n    group : \"uniqueGroup1\",\r\n    columns : []\r\n  },\r\n\r\n\r\n  { id : \"uniqueProjec4\",\r\n   name : \"Atomic Habits\",\r\n    group : \"uniqueGroup2\",\r\n    columns : []\r\n  },\r\n\r\n  { id : \"uniqueProjec5\",\r\n  name : \"Testing Solo List\",\r\n   group : \"nonGrouped\",\r\n   columns : []\r\n }\r\n\r\n]\r\n  \r\n\r\n\r\nconst backend_projectGroups = [\r\n\r\n\r\n  \r\n    {\r\n      id: \"uniqueGroup1\",\r\n     name: \"School\"\r\n    },\r\n\r\n    {id : \"uniqueGroup2\",\r\n     name : \"Personal\"},\r\n\r\n     {\r\n      id: \"nonGrouped\",\r\n      name: \"For projects that dont have groups\"\r\n    }\r\n\r\n  \r\n]\r\n\r\n\r\nexport function getProjectGroup(group_id){\r\n\r\n  var group = {...backend_projectGroups.find(group => {return group.id === group_id})}\r\n  return group;\r\n\r\n}\r\n\r\n\r\nexport function renameColumn(col_id, name){\r\n\r\n\r\n  var column = {...backend_columns.find(col => {return col.id === col_id})}\r\n  column.name = name;\r\n\r\n  return true;\r\n\r\n\r\n}\r\n\r\nexport function getProject(proj_id){\r\n\r\n  \r\n      var project = {...backend_projects.find(proj => {return proj.id == proj_id})};\r\n      return project;\r\n}\r\n\r\n\r\nexport function getColumn(col_id){\r\n\r\n    var column = {...backend_columns.find(col => {return col.id === col_id})}\r\n    return column;\r\n\r\n}\r\n\r\n\r\nexport function getTasks(task_id){\r\n  var task = {...backend_tasks.find(task => {return task.id === task_id })}\r\n  return task;\r\n}\r\n\r\n\r\n\r\nexport function getFullProject(proj_id){\r\n\r\n      var project = getProject(proj_id);\r\n      \r\n     \r\n      if (project === undefined)\r\n        return;\r\n\r\n\r\n      project.columns.map( (col_id, c_index) =>{\r\n\r\n        var column =  getColumn(col_id);\r\n\r\n        if (column.tasks.length > 0){\r\n          column.tasks.map( (task_id, t_index)=>{\r\n\r\n            column.tasks[t_index] = getTasks(task_id);\r\n\r\n          })\r\n      }\r\n\r\n      project.columns[c_index] = column;\r\n        \r\n\r\n      \r\n})\r\n\r\n\r\n    \r\n\r\n\r\nreturn project;\r\n \r\n\r\n\r\n  \r\n}\r\n\r\n\r\n\r\nexport function getEmptyProject(){\r\n\r\n\r\n  return {\r\n      id : \"empty\",\r\n      name : \"test\",\r\n      group : null,\r\n      columns : []\r\n\r\n  }\r\n}\r\n\r\n\r\nexport function getAllProjects(){\r\n        return backend_projects;\r\n}\r\n\r\n\r\nexport function getAllProjectsWithGroups(){\r\n\r\n    var projectGroup = [];\r\n\r\n\r\n    backend_projectGroups.forEach(group => projectGroup.push({...group}))\r\n\r\n    projectGroup.forEach(group => {\r\n\r\n        group.projects = backend_projects.filter(project => project.group === group.id)\r\n\r\n    })\r\n\r\n  \r\n\r\n\r\n    return projectGroup;\r\n\r\n}\r\n\r\n\r\nexport function getNumOfTasks(proj_id){\r\n\r\n  var tasks = 0;\r\n  var project = {...backend_projects.find(proj => {return proj.id === proj_id})}\r\n\r\n\r\n    project.columns.forEach(col_id =>{\r\n\r\n        var col = getColumn(col_id);\r\n       \r\n        tasks += col.tasks.length;\r\n       \r\n    })\r\n\r\n    return tasks\r\n\r\n\r\n}","C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Kanban.js",[],"C:\\Users\\Rennie\\Documents\\Repos\\React-Kanban-View\\src\\Sidebar.js",["50","51","52","53"],"import React, { Component } from 'react'\r\nimport {ProSidebar, SidebarHeader, SidebarFooter, SidebarContent,  Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport * as dataService from './dataService'\r\nimport styled from 'styled-components'\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport userImg from './images/userRennie.png'\r\n\r\nvar userName = \"Tai-Juan Rennie\"\r\nvar userType = \"Standard User\"\r\nvar userStatus = \"Online\"\r\n\r\n\r\n\r\n  const UserInfo = styled.div`\r\n  overflow: hidden;\r\n\r\n  >span {\r\n      display: block;\r\n      white-space: nowrap;\r\n      text-overflow: ellipsis;\r\n  }\r\n\r\n  .user-role {\r\n      font-size: 12px;\r\n  }\r\n\r\n  .user-status {\r\n      font-size: 11px;\r\n      margin-top: 4px;\r\n\r\n      i {\r\n          font-size: 8px;\r\n          margin-right: 4px;\r\n          color: #5cb85c;\r\n      }\r\n`\r\n\r\nconst UserPic = styled.div`\r\nwidth: 60px;\r\n            padding: 2px;\r\n            margin-right: 15px;\r\n            overflow: hidden;\r\n\r\n            img {\r\n                height: 100%;\r\n                width: 100%;\r\n            }\r\n\r\n`\r\n\r\n\r\nconst Header = styled.div`\r\ndisplay : flex;\r\nflex-direction : row;\r\npadding: 20px;\r\noverflow: hidden;\r\n\r\n`\r\n\r\nexport default class Sidebar extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n\r\n        this.state = {projectGroups :  dataService.getAllProjectsWithGroups()}\r\n        console.log(this.state)\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <ProSidebar>\r\n\r\n                 \r\n\r\n                    \r\n            <SidebarHeader>\r\n                \r\n                <Header>\r\n                   \r\n                                <UserPic>\r\n                                    <img className=\"img-responsive img-rounded\" src={userImg} alt=\"User \" />\r\n                                </UserPic>\r\n\r\n                                <UserInfo>\r\n                                    <span className=\"user-name\">\r\n                                        <strong> Rennie</strong>\r\n                                    </span>\r\n                                    <span className=\"user-role\"> Standard User</span>\r\n                                    <span className=\"user-status\">\r\n                                        <i className=\"fa fa-circle\"></i>\r\n                                        <span> Online</span>\r\n                                    </span>\r\n                                </UserInfo>\r\n\r\n                  \r\n                </Header>\r\n                \r\n            </SidebarHeader>\r\n\r\n\r\n            <SidebarContent>  \r\n\r\n\r\n           \r\n                <Menu>\r\n                    <MenuItem>Today</MenuItem>\r\n                    <MenuItem>Next 7 Days</MenuItem>\r\n                    <MenuItem>Calendar</MenuItem>\r\n                    <MenuItem>Inbox</MenuItem>\r\n                </Menu>\r\n\r\n                {this.state.projectGroups.map(group =>{\r\n\r\n                    \r\n                    let cat = group.id !== \"nonGrouped\" ? (<React.Fragment>\r\n\r\n\r\n                                \r\n                \r\n                        <SubMenu title={group.name} >\r\n                            {\r\n                                group.projects.map(project =>{\r\n                                    return <MenuItem>{project.name + \" - \" + dataService.getNumOfTasks(project.id)}</MenuItem>\r\n                                })\r\n                            }\r\n                        </SubMenu>\r\n               \r\n\r\n\r\n\r\n\r\n                    </React.Fragment>) :  (group.projects.map(project =>{\r\n                                            return <MenuItem>{project.name + \" - \" + dataService.getNumOfTasks(project.id)}</MenuItem>\r\n                                            }))\r\n\r\n\r\n\r\n\r\n                        \r\n                        return (<Menu>{cat}</Menu>);\r\n\r\n                   \r\n                      \r\n                \r\n                    \r\n                 \r\n                \r\n                })}\r\n           \r\n              \r\n            \r\n               \r\n       \r\n\r\n\r\n\r\n                \r\n            </SidebarContent>\r\n\r\n\r\n           \r\n      </ProSidebar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":16,"nodeType":"62","messageId":"63","endLine":1,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":132,"column":71,"nodeType":"66","messageId":"67","endLine":132,"endColumn":73},{"ruleId":"68","severity":1,"message":"69","line":161,"column":46,"nodeType":"70","messageId":"71","endLine":161,"endColumn":48},{"ruleId":"68","severity":1,"message":"69","line":166,"column":47,"nodeType":"70","messageId":"71","endLine":166,"endColumn":49},{"ruleId":"60","severity":1,"message":"72","line":2,"column":36,"nodeType":"62","messageId":"63","endLine":2,"endColumn":49},{"ruleId":"60","severity":1,"message":"73","line":8,"column":5,"nodeType":"62","messageId":"63","endLine":8,"endColumn":13},{"ruleId":"60","severity":1,"message":"74","line":9,"column":5,"nodeType":"62","messageId":"63","endLine":9,"endColumn":13},{"ruleId":"60","severity":1,"message":"75","line":10,"column":5,"nodeType":"62","messageId":"63","endLine":10,"endColumn":15},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SidebarFooter' is defined but never used.","'userName' is assigned a value but never used.","'userType' is assigned a value but never used.","'userStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]